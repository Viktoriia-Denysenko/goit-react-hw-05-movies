{"version":3,"file":"static/js/703.e896b673.chunk.js","mappings":"4TAEO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IACrB,4FAFG,cACCC,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACkBL,IAAAA,IAAA,6CACiBK,EADjB,6DADlB,cACCJ,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACkBP,IAAAA,IAAA,kHACsFO,IAFxG,cACCN,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BH,GAA/B,uFACkBL,IAAAA,IAAA,6CACiBK,EADjB,qEADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKO,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,uFACkBL,IAAAA,IAAA,6CACiBK,EADjB,qEADlB,cACCJ,EADD,yBAIEA,EAASC,KAAKC,SAJhB,oE,oDCdP,IAbA,WACE,OACE,gBACEQ,MAAO,CACLC,QAAS,OACTC,eAAgB,UAHpB,UAME,SAAC,KAAD,CAAWC,OAAO,MAAMC,MAAM,MAAMC,MAAM,OAAOC,UAAU,gB,6JCVjE,GAAgB,KAAO,qBAAqB,MAAQ,sBAAsB,OAAS,uBAAuB,UAAY,2B,mBCoEtH,MA9DA,WACE,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BP,EAAAA,EAAAA,UAASM,EAAaE,IAAI,UAAY,IAAhE,eAAOnB,EAAP,KAAcoB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MA2BjB,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACER,GAAW,GADb,mBAGyBhB,EAAAA,EAAAA,IAAgBC,GAHzC,OAGUY,EAHV,OAIIC,EAAUD,GAJd,gDAMIY,EAAAA,GAAAA,MAAY,kBANhB,yBAQIT,GAAW,GARf,6EADc,sBAYA,KAAVf,GAZW,WAAD,wBAaZyB,KAED,CAACzB,KAGF,iCACE,kBAAM0B,UAAWC,EAAAA,KAAQC,SA3BR,SAAAC,GACnBA,EAAMC,iBACNV,EAASS,EAAME,cAAcC,SAAShC,MAAMiC,MAAMC,cAAcC,QAChEjB,EAAgB,CACdlB,MAAO6B,EAAME,cAAcC,SAAShC,MAAMiC,MAAMC,cAAcC,UAuB9D,WACE,kBACET,UAAWC,EAAAA,MACXS,KAAK,OACLC,aAAa,MACbC,KAAK,QACLC,WAAS,KAEX,mBAAQH,KAAK,SAASV,UAAWC,EAAAA,OAAjC,uBAIDb,IAAW,SAAC0B,EAAA,EAAD,IACX5B,IACC,eAAIc,UAAWC,EAAAA,UAAf,SACGf,EAAO6B,KAAI,gBAAG3C,EAAH,EAAGA,GAAI4C,EAAP,EAAOA,MAAP,OACV,eAAIhB,UAAWC,EAAAA,UAAf,UACE,SAAC,KAAD,CAAMgB,GAAE,kBAAa7C,GAAM8C,MAAO,CAAEC,KAAMxB,GAA1C,SACGqB,KAF4B5C","sources":["components/Api/Api.js","components/Loader/Loader.js","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function getMovies() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=ecc266c5c008b90a8b88a128072b35c2'\n  );\n  return response.data.results;\n}\n\nexport async function getMoviesById(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=ecc266c5c008b90a8b88a128072b35c2&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function getMovieByQuery(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=ecc266c5c008b90a8b88a128072b35c2&language=en-US&query=${query}`\n  );\n  return response.data.results;\n}\n\nexport async function getMovieCredits(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=ecc266c5c008b90a8b88a128072b35c2&language=en-US`\n  );\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=ecc266c5c008b90a8b88a128072b35c2&language=en-US`\n  );\n  return response.data.results;\n}\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nfunction Loader() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <ThreeDots height=\"100\" width=\"100\" color=\"grey\" ariaLabel=\"loading\" />\n    </div>\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__mp42q\",\"input\":\"Movies_input__OE3ef\",\"button\":\"Movies_button__hVjwG\",\"movieList\":\"Movies_movieList__3O+kj\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport s from './Movies.module.css';\nimport { getMovieByQuery } from 'components/Api/Api';\n\nfunction Movies() {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n  const location = useLocation();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setQuery(event.currentTarget.elements.query.value.toLowerCase().trim());\n    setSearchParams({\n      query: event.currentTarget.elements.query.value.toLowerCase().trim(),\n    });\n  };\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setLoading(true);\n      try {\n        const movies = await getMovieByQuery(query);\n        setMovies(movies);\n      } catch (error) {\n        toast.error('No movie found');\n      } finally {\n        setLoading(false);\n      }\n    }\n    if (query !== '') {\n      fetchMovie();\n    }\n  }, [query]);\n\n  return (\n    <>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"query\"\n          autoFocus\n        ></input>\n        <button type=\"submit\" className={s.button}>\n          Search\n        </button>\n      </form>\n      {loading && <Loader />}\n      {movies && (\n        <ul className={s.movieList}>\n          {movies.map(({ id, title }) => (\n            <li className={s.movieItem} key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["getMovies","axios","response","data","results","getMoviesById","id","getMovieByQuery","query","getMovieCredits","cast","getMovieReviews","style","display","justifyContent","height","width","color","ariaLabel","useState","movies","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","setQuery","location","useLocation","useEffect","toast","fetchMovie","className","s","onSubmit","event","preventDefault","currentTarget","elements","value","toLowerCase","trim","type","autoComplete","name","autoFocus","Loader","map","title","to","state","from"],"sourceRoot":""}